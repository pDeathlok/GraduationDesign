sqlctx.sql("select qdomain, sip, getSecDomain(qdomain) as SecDomain, qtype, rcode from gddx_dnsr2c_new where dt = '20171127' and hour >= '13' and hour <= '23' and islegalDomain(qdomain)").registerTempTable("tmp")
var res = sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc, sum(case when qtype = 'DNSKEY' then 1 else 0 end) as qdnskeyc, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc, sum(case when qtype = 'SOA' then 1 else 0 end) as qsoac, sum(case when qtype = 'SPF' then 1 else 0 end) as qspfc, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc, sum(case when qtype = 'DS' then 1 else 0 end) as qdsc, sum(case when qtype = 'NAPTR' then 1 else 0 end) as qnaptrc, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc, sum(case when rcode = 1 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as wrongqueryc, sum(case when rcode = 2 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as wrongserverc, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc, count(distinct(sip)) as sipc, count(distinct(qdomain)) as domainc from tmp group by SecDomain")

sqlctx.sql("select qdomain, sip, getSecDomain(qdomain) as SecDomain, qtype, rcode from gddx_dnsr2c_new where dt = '20171127' and hour = '13' and islegalDomain(qdomain)").registerTempTable("tmp")
var tmp = sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac_13, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec_13, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc_13, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc_13, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc_13, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc_13, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc_13, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc_13, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc_13, count(distinct(sip)) as sipc_13, count(distinct(qdomain)) as domainc_13 from tmp group by SecDomain")
res = res.join(tmp, Seq("SecDomain"), "left")

sqlctx.sql("select qdomain, sip, getSecDomain(qdomain) as SecDomain, qtype, rcode from gddx_dnsr2c_new where dt = '20171127' and hour = '14' and islegalDomain(qdomain)").registerTempTable("tmp")
var tmp = sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac_14, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec_14, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc_14, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc_14, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc_14, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc_14, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc_14, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc_14, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc_14, count(distinct(sip)) as sipc_14, count(distinct(qdomain)) as domainc_14 from tmp group by SecDomain")
res = res.join(tmp, Seq("SecDomain"), "left")

sqlctx.sql("select qdomain, sip, getSecDomain(qdomain) as SecDomain, qtype, rcode from gddx_dnsr2c_new where dt = '20171127' and hour = '15' and islegalDomain(qdomain)").registerTempTable("tmp")
var tmp = sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac_15, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec_15, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc_15, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc_15, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc_15, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc_15, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc_15, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc_15, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc_15, count(distinct(sip)) as sipc_15, count(distinct(qdomain)) as domainc_15 from tmp group by SecDomain")
res = res.join(tmp, Seq("SecDomain"), "left")

sqlctx.sql("select qdomain, sip, getSecDomain(qdomain) as SecDomain, qtype, rcode from gddx_dnsr2c_new where dt = '20171127' and hour = '16' and islegalDomain(qdomain)").registerTempTable("tmp")
var tmp = sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac_16, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec_16, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc_16, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc_16, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc_16, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc_16, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc_16, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc_16, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc_16, count(distinct(sip)) as sipc_16, count(distinct(qdomain)) as domainc_16 from tmp group by SecDomain")
res = res.join(tmp, Seq("SecDomain"), "left")

sqlctx.sql("select qdomain, sip, getSecDomain(qdomain) as SecDomain, qtype, rcode from gddx_dnsr2c_new where dt = '20171127' and hour = '17' and islegalDomain(qdomain)").registerTempTable("tmp")
var tmp = sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac_17, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec_17, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc_17, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc_17, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc_17, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc_17, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc_17, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc_17, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc_17, count(distinct(sip)) as sipc_17, count(distinct(qdomain)) as domainc_17 from tmp group by SecDomain")
res = res.join(tmp, Seq("SecDomain"), "left")

sqlctx.sql("select qdomain, sip, getSecDomain(qdomain) as SecDomain, qtype, rcode from gddx_dnsr2c_new where dt = '20171127' and hour = '18' and islegalDomain(qdomain)").registerTempTable("tmp")
var tmp = sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac_18, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec_18, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc_18, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc_18, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc_18, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc_18, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc_18, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc_18, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc_18, count(distinct(sip)) as sipc_18, count(distinct(qdomain)) as domainc_18 from tmp group by SecDomain")
res = res.join(tmp, Seq("SecDomain"), "left")

sqlctx.sql("select qdomain, sip, getSecDomain(qdomain) as SecDomain, qtype, rcode from gddx_dnsr2c_new where dt = '20171127' and hour = '19' and islegalDomain(qdomain)").registerTempTable("tmp")
var tmp = sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac_19, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec_19, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc_19, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc_19, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc_19, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc_19, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc_19, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc_19, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc_19, count(distinct(sip)) as sipc_19, count(distinct(qdomain)) as domainc_19 from tmp group by SecDomain")
res = res.join(tmp, Seq("SecDomain"), "left")

sqlctx.sql("select qdomain, sip, getSecDomain(qdomain) as SecDomain, qtype, rcode from gddx_dnsr2c_new where dt = '20171127' and hour = '20' and islegalDomain(qdomain)").registerTempTable("tmp")
var tmp = sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac_20, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec_20, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc_20, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc_20, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc_20, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc_20, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc_20, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc_20, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc_20, count(distinct(sip)) as sipc_20, count(distinct(qdomain)) as domainc_20 from tmp group by SecDomain")
res = res.join(tmp, Seq("SecDomain"), "left")

sqlctx.sql("select qdomain, sip, getSecDomain(qdomain) as SecDomain, qtype, rcode from gddx_dnsr2c_new where dt = '20171127' and hour = '21' and islegalDomain(qdomain)").registerTempTable("tmp")
var tmp = sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac_21, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec_21, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc_21, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc_21, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc_21, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc_21, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc_21, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc_21, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc_21, count(distinct(sip)) as sipc_21, count(distinct(qdomain)) as domainc_21 from tmp group by SecDomain")
res = res.join(tmp, Seq("SecDomain"), "left")

sqlctx.sql("select qdomain, sip, getSecDomain(qdomain) as SecDomain, qtype, rcode from gddx_dnsr2c_new where dt = '20171127' and hour = '22' and islegalDomain(qdomain)").registerTempTable("tmp")
var tmp = sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac_22, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec_22, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc_22, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc_22, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc_22, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc_22, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc_22, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc_22, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc_22, count(distinct(sip)) as sipc_22, count(distinct(qdomain)) as domainc_22 from tmp group by SecDomain")
res = res.join(tmp, Seq("SecDomain"), "left")

res.saveAsTable("tmp20171127")

sqlctx.sql("select qdomain, sip, getSecDomain(qdomain) as SecDomain, qtype, rcode from gddx_dnsr2c_new where dt = '20171127' and hour = '23' and islegalDomain(qdomain)").registerTempTable("tmp")
#var tmp = sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac_23, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec_23, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc_23, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc_23, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc_23, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc_23, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc_23, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc_23, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc_23, count(distinct(sip)) as sipc_23, count(distinct(qdomain)) as domainc_23 from tmp group by SecDomain")
sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac_23, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec_23, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc_23, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc_23, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc_23, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc_23, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc_23, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc_23, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc_23, count(distinct(sip)) as sipc_23, count(distinct(qdomain)) as domainc_23 from tmp group by SecDomain").saveAsTable("tmp20171127_")
#res = res.join(tmp, Seq("SecDomain"), "left")


sqlctx.sql("select qdomain, sip, getSecDomain(qdomain) as SecDomain, qtype, rcode from gddx_dnsr2c_new where dt = '20171129' and hour >= '13' and hour <= '23' and islegalDomain(qdomain)").registerTempTable("tmp")
var res = sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc, sum(case when qtype = 'DNSKEY' then 1 else 0 end) as qdnskeyc, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc, sum(case when qtype = 'SOA' then 1 else 0 end) as qsoac, sum(case when qtype = 'SPF' then 1 else 0 end) as qspfc, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc, sum(case when qtype = 'DS' then 1 else 0 end) as qdsc, sum(case when qtype = 'NAPTR' then 1 else 0 end) as qnaptrc, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc, sum(case when rcode = 1 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as wrongqueryc, sum(case when rcode = 2 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as wrongserverc, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc, count(distinct(sip)) as sipc, count(distinct(qdomain)) as domainc from tmp group by SecDomain")

sqlctx.sql("select qdomain, sip, getSecDomain(qdomain) as SecDomain, qtype, rcode from gddx_dnsr2c_new where dt = '20171129' and hour = '13' and islegalDomain(qdomain)").registerTempTable("tmp")
var tmp = sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac_13, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec_13, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc_13, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc_13, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc_13, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc_13, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc_13, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc_13, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc_13, count(distinct(sip)) as sipc_13, count(distinct(qdomain)) as domainc_13 from tmp group by SecDomain")
res = res.join(tmp, Seq("SecDomain"), "left")

sqlctx.sql("select qdomain, sip, getSecDomain(qdomain) as SecDomain, qtype, rcode from gddx_dnsr2c_new where dt = '20171129' and hour = '14' and islegalDomain(qdomain)").registerTempTable("tmp")
var tmp = sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac_14, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec_14, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc_14, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc_14, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc_14, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc_14, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc_14, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc_14, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc_14, count(distinct(sip)) as sipc_14, count(distinct(qdomain)) as domainc_14 from tmp group by SecDomain")
res = res.join(tmp, Seq("SecDomain"), "left")

sqlctx.sql("select qdomain, sip, getSecDomain(qdomain) as SecDomain, qtype, rcode from gddx_dnsr2c_new where dt = '20171129' and hour = '15' and islegalDomain(qdomain)").registerTempTable("tmp")
var tmp = sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac_15, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec_15, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc_15, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc_15, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc_15, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc_15, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc_15, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc_15, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc_15, count(distinct(sip)) as sipc_15, count(distinct(qdomain)) as domainc_15 from tmp group by SecDomain")
res = res.join(tmp, Seq("SecDomain"), "left")

sqlctx.sql("select qdomain, sip, getSecDomain(qdomain) as SecDomain, qtype, rcode from gddx_dnsr2c_new where dt = '20171129' and hour = '16' and islegalDomain(qdomain)").registerTempTable("tmp")
var tmp = sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac_16, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec_16, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc_16, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc_16, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc_16, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc_16, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc_16, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc_16, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc_16, count(distinct(sip)) as sipc_16, count(distinct(qdomain)) as domainc_16 from tmp group by SecDomain")
res = res.join(tmp, Seq("SecDomain"), "left")

sqlctx.sql("select qdomain, sip, getSecDomain(qdomain) as SecDomain, qtype, rcode from gddx_dnsr2c_new where dt = '20171129' and hour = '17' and islegalDomain(qdomain)").registerTempTable("tmp")
var tmp = sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac_17, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec_17, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc_17, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc_17, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc_17, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc_17, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc_17, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc_17, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc_17, count(distinct(sip)) as sipc_17, count(distinct(qdomain)) as domainc_17 from tmp group by SecDomain")
res = res.join(tmp, Seq("SecDomain"), "left")

sqlctx.sql("select qdomain, sip, getSecDomain(qdomain) as SecDomain, qtype, rcode from gddx_dnsr2c_new where dt = '20171129' and hour = '18' and islegalDomain(qdomain)").registerTempTable("tmp")
var tmp = sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac_18, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec_18, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc_18, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc_18, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc_18, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc_18, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc_18, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc_18, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc_18, count(distinct(sip)) as sipc_18, count(distinct(qdomain)) as domainc_18 from tmp group by SecDomain")
res = res.join(tmp, Seq("SecDomain"), "left")

sqlctx.sql("select qdomain, sip, getSecDomain(qdomain) as SecDomain, qtype, rcode from gddx_dnsr2c_new where dt = '20171129' and hour = '19' and islegalDomain(qdomain)").registerTempTable("tmp")
var tmp = sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac_19, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec_19, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc_19, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc_19, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc_19, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc_19, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc_19, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc_19, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc_19, count(distinct(sip)) as sipc_19, count(distinct(qdomain)) as domainc_19 from tmp group by SecDomain")
res = res.join(tmp, Seq("SecDomain"), "left")

sqlctx.sql("select qdomain, sip, getSecDomain(qdomain) as SecDomain, qtype, rcode from gddx_dnsr2c_new where dt = '20171129' and hour = '20' and islegalDomain(qdomain)").registerTempTable("tmp")
var tmp = sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac_20, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec_20, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc_20, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc_20, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc_20, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc_20, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc_20, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc_20, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc_20, count(distinct(sip)) as sipc_20, count(distinct(qdomain)) as domainc_20 from tmp group by SecDomain")
res = res.join(tmp, Seq("SecDomain"), "left")

sqlctx.sql("select qdomain, sip, getSecDomain(qdomain) as SecDomain, qtype, rcode from gddx_dnsr2c_new where dt = '20171129' and hour = '21' and islegalDomain(qdomain)").registerTempTable("tmp")
var tmp = sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac_21, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec_21, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc_21, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc_21, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc_21, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc_21, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc_21, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc_21, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc_21, count(distinct(sip)) as sipc_21, count(distinct(qdomain)) as domainc_21 from tmp group by SecDomain")
res = res.join(tmp, Seq("SecDomain"), "left")

sqlctx.sql("select qdomain, sip, getSecDomain(qdomain) as SecDomain, qtype, rcode from gddx_dnsr2c_new where dt = '20171129' and hour = '22' and islegalDomain(qdomain)").registerTempTable("tmp")
var tmp = sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac_22, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec_22, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc_22, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc_22, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc_22, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc_22, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc_22, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc_22, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc_22, count(distinct(sip)) as sipc_22, count(distinct(qdomain)) as domainc_22 from tmp group by SecDomain")
res = res.join(tmp, Seq("SecDomain"), "left")

res.saveAsTable("tmp20171129")

sqlctx.sql("select qdomain, sip, getSecDomain(qdomain) as SecDomain, qtype, rcode from gddx_dnsr2c_new where dt = '20171129' and hour = '23' and islegalDomain(qdomain)").registerTempTable("tmp")
#var tmp = sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac_23, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec_23, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc_23, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc_23, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc_23, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc_23, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc_23, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc_23, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc_23, count(distinct(sip)) as sipc_23, count(distinct(qdomain)) as domainc_23 from tmp group by SecDomain")
sqlctx.sql("select SecDomain, sum(case when qtype = 'A' or qtype = 'AAAA' then 1 else 0 end) as qac_23, sum(case when qtype = 'CNAME' then 1 else 0 end) as qcnamec_23, sum(case when qtype = 'TXT' then 1 else 0 end) as qtxtc_23, sum(case when qtype = 'MX' then 1 else 0 end) as qmxc_23, sum(case when qtype = 'NS' or qtype = 'SOA' then 1 else 0 end) as qnsc_23, sum(case when qtype = 'ANY' then 1 else 0 end) as qanyc_23, sum(case when qtype = 'SRV' then 1 else 0 end) as qsrvc_23, sum(case when rcode = 0 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as successc_23, sum(case when rcode = 3 and (qtype = 'A' or qtype = 'AAAA') then 1 else 0 end) as nonexistc_23, count(distinct(sip)) as sipc_23, count(distinct(qdomain)) as domainc_23 from tmp group by SecDomain").saveAsTable("tmp20171129_")
#res = res.join(tmp, Seq("SecDomain"), "left")


